{
  "type": "object",
  "properties": {
    "tasks": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Task"
      }
    }
  },
  "definitions": {
    "Task": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "init",
            "generateAndBuild",
            "mockTest",
            "liveTest"
          ]
        },
        "options": {
          "type": "object",
          "oneOf": [
            {"$ref": "#/definitions/InitOptions"},
            {"$ref": "#/definitions/GenerateAndBuildOptions"},
            {"$ref": "#/definitions/MockTestOptions"},
            {"$ref": "#/definitions/LiveTestOptions"}
          ]
        }
      },
      "required": ["name", "options"]
    },
    "InitOptions": {
      // Init the environment. Install dependencies.
      "type": "object",
      "properties": {
        "initScript": {
          // Script to init dependencies.
          // Param: <path_to_initOutput.json>
          // initOutput.json: See #initOutput.
          "$ref": "#/definitions/RunOptions"
        }
      },
      "required": ["initScript"]
    },
    "GenerateAndBuildOptions": {
      // Generate the SDK code and build generated code.
      "type": "object",
      "properties": {
        "generateAndBuildScript": {
          // Script to generate the SDK code.
          // Param: <path_to_generateAndBuildInput.json> <path_to_generateAndBuildOutput.json>
          "$ref": "#/definitions/RunOptions"
        }
      },
      "required": ["generateAndBuildScript"]
    },
    "MockTestOptions": {
      // Test the generated codes with mock server.
      "type": "object",
      "properties": {
        "mockTestScript": {
          // Script to run mock test.
          // Param: <path_to_mockTestInput.json> <path_to_mockTestOutput.json>
          "$ref": "#/definitions/RunOptions"
        }
      },
      "required": ["mockTestScript"]
    },
    "LiveTestOptions": {
      // Test the generated codes online.
      "type": "object",
      "properties": {
        "liveTestScript": {
          // Script to run mock test.
          // Param: <path_to_mockTestInput.json> <path_to_mockTestOutput.json>
          "$ref": "#/definitions/RunOptions"
        }
      },
      "required": ["liveTestScript"]
    },
    "RunOptions": {
      // Options to run a script and collect log.
      "type": "object",
      "properties": {
        "path": {
          // Script path related to repo root
          "type": "string"
        },
        "envs": {
          // Extra environment variable to be passed to the script (except initScript).
          // By default the following envs will be passed:
          // PATH, SHELL, PWD (current directory)
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "logPrefix": {
          // Prefix to be added to SDK Automation log. By default it would be filename of the script.
          "type": "string"
        },
        "stdout": {
          // How should SDK Automation handle the script stdout stream
          "allOf": [
            {
              "$ref": "#/definitions/RunLogOptions"
            }
          ],
          "default": {
            "show": true
          }
        },
        "stderr": {
          // How should SDK Automation handle the script stderr stream
          "allOf": [
            {
              "$ref": "#/definitions/RunLogOptions"
            }
          ],
          "default": {
            "scriptError": "error"
          }
        },
        "exitWithNonZeroCode": {
          "properties": {
            // How should SDK Automation handle non-zero exitCode.
            "show": {
              // Should we store this error and show it somewhere.
              "type": "boolean",
              "default": true
            },
            "result": {
              // If script has non-error exitCode how should we mark the script's result.
              "type": "string",
              "enum": ["error", "warning", "ignore"],
              "default": "error"
            }
          },
          "default": {
            "show": true,
            "result": "error"
          }
        }
      },
      "required": ["path"]
    },
    "RunLogOptions": {
      // How should SDK Automation handle the log stream.
      "show": {
        // Should we show this stream.
        "$ref": "#/definitions/RunLogFilterOptions"
      },
      "scriptError": {
        // If any line match, assume the script fails.
        "$ref": "#/definitions/RunLogFilterOptions"
      },
      "scriptWarning": {
        // If any line match, assume the script warns.
        "$ref": "#/definitions/RunLogFilterOptions"
      }
    },
    "RunLogFilterOptions": {
      "oneOf": [
        {
          // If line of log match this regex then hit
          "type": "string",
          "format": "regex"
        },
        {
          // If set to true, any line of log will hit
          "type": "boolean"
        }
      ],
      "default": false
    }
  }
}
