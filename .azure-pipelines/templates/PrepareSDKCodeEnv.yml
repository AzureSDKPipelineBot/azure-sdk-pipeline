steps:
- task: GoTool@0
  inputs:
    version: '1.16.x'
    goPath: '/home/vsts/work/1/s/go'
    goBin: '/home/vsts/work/1/s/go/bin'
- script: |
    # pull sdk repo
    set -x
    echo "https://$(PIPELINE_USER):$(PIPELINE_TOKEN)@github.com" > ~/.git-credentials
    cd $(Pipeline.Workspace)/s
    git clone --branch $(SDK_REPO_BASE_BRANCH) https://$(PIPELINE_USER):$(PIPELINE_TOKEN)@$(SDK_REPO_URL)

    cd $(Pipeline.Workspace)/s/$(SDK_REPO_NAME)
    tf_existed_in_remote=$(git ls-remote --heads origin $(WORKBRANCH))
    if [[ -z ${tf_existed_in_remote} ]]; then
      git checkout -b $(WORKBRANCH)
    else
      git checkout $(WORKBRANCH)
      # git reset --hard origin/$(WORKBRANCH)
      # git reset --hard origin/$(SDK_REPO_BASE_BRANCH)
    fi

    #pull swagger repo
    cd $(Pipeline.Workspace)/s
    git clone --branch $(SPEC_REPO_BASE_BRANCH) https://$(PIPELINE_USER):$(PIPELINE_TOKEN)@$(SPEC_REPO_URL)
    ls -l

    # upload to azure-rest-api-specs branch
    cd $(Pipeline.Workspace)/s/$(SPEC_REPO_NAME)
    spec_existed_in_remote=$(git ls-remote --heads origin $(WORKBRANCH))
    if [[ -z ${spec_existed_in_remote} ]]; then
      git checkout -b $(WORKBRANCH)
    else
      git checkout $(WORKBRANCH)
      # git reset --hard origin/$(SPEC_REPO_BASE_BRANCH)
    fi
    git config credential.helper store ; git config --global user.email "chunyu@microsoft.com";git config --global user.name "chunyu3;"
    git pull origin $(WORKBRANCH)
    cd $(Pipeline.Workspace)/s
  displayName: 'pull repo'
- script: |
    sudo npm install -g autorest@latest && sudo npm install -g typescript
  displayName: 'install autorest'
- bash: |
    # sudo npm install -g oav@2.2.6 --unsafe-perm=true --allow-root
    # sudo npm install -g depthcoverage --unsafe-perm=true --allow-root
    # depthcoverage --token=$(PIPELINE_TOKEN) --org=$(PIPELINE_ORG) --repo=$(PIPELINE_REPO) --operation=read --PRNumber=$(System.PullRequest.PullRequestNumber)

    # for i in $(jq -c .jsonFilelist[] $(RESOURCE_MAP_FILE) | sed -e 's/^"//' -e 's/"$//'); do oav generate-examples $(Pipeline.Workspace)/s/azure-rest-api-specs$i;done
    # # oav generate-examples [PATH]

    # # submit Generated example
    # if [ "$?" != "0" ]; then
    #   echo "failed to generate examples"
    # else
    #   echo "examples generated"
    #   cd $(Pipeline.Workspace)/s/azure-rest-api-specs
    #   echo "https://$(PIPELINE_USER):$(PIPELINE_TOKEN)@github.com" > ~/.git-credentials
    #   git config credential.helper store ; git config --global user.email "chunyu@microsoft.com";git config --global user.name "chunyu3;"
    #   git branch; git pull origin $(WORKBRANCH); git add -A; git commit -m "autogenerated"; git push origin $(WORKBRANCH);
    # # fi
  displayName: 'Generate Example'