steps:
- bash: |
    pwd
    . venv/bin/activate
    which azdev
    az login --service-principal -u $(SERVICE_PRINCIPE_ID) -p $(SERVICE_PRINCIPE_SECRET) --tenant $(SERVICE_PRINCIPE_TENANT)
    # az vm show --name MyVm --resource-group MyResourceGroup --debug
    export AZURE_TEST_RUN_LIVE=true
    sdktarget=$(TARGET)
    if [ "$sdktarget" == "clicore" ] || [ "$sdktarget" == "cli" ]; then
      pytest -rA ./azure-cli/src/azure-cli/azure/cli/command_modules/$(Package)/tests/cmdlet/test_positive.py 1>$(Pipeline.Workspace)/s/$(TASK_KEY).log 2>&1
    else
      #cli-extension
      pytest -rA ./azure-cli-extensions/src/$(Package)/azext_$(Package)/tests/cmdlet/test_positive.py 1>$(Pipeline.Workspace)/s/$(TASK_KEY).log 2>&1
    fi

    if [ "$?" != "0" ]; then
      echo -e "\e[31m[$(date -u)] ERROR: [$(ResourceProvider)]: CLI Test failed"
      az cloud set -n AzureCloud
      az login --service-principal -u $(SERVICE_PRINCIPE_ID) -p $(SERVICE_PRINCIPE_SECRET) --tenant $(SERVICE_PRINCIPE_TENANT)
      az storage blob upload -c depthcoverage -f $(Pipeline.Workspace)/s/$(TASK_KEY).log -n log/$(CodeGenerationName)-$(Build.BuildId)-$(TASK_KEY).log --subscription $(SERVICE_PRINCIPE_SUBSCRIPTION) --account-name=depthcoverage
      echo "##vso[task.setvariable variable=Task_Result]failure"
      exit 1
    else
      az cloud set -n AzureCloud
    fi
  displayName: 'CLI Mock Test'