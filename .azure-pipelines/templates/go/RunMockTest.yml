steps:
- bash: |
    pwd
    ls -l

    autorestConfigFile=$(Pipeline.Workspace)/s/azure-rest-api-specs/specification/$(ResourceProvider)/resource-manager/readme.go.md
    modules=($(grep -i "module-name:\s" "$autorestConfigFile"))
    for (( i=1; i<${#modules[@]}; i+=2 ));
    do
      sep=(${modules[$i]//// })
      if [ $i -eq 1 ]; then
        rpAndPackages="${sep[2]} ${sep[3]//$'\r'}"
      else
        rpAndPackages="$rpAndPackages ${sep[3]//$'\r'}"
      fi
    done
    
    echo "RP name and packages' name: $rpAndPackages"
    echo "##vso[task.setvariable variable=rpAndPackages]$rpAndPackages"
  displayName: 'Get RP and package name'
- bash: |
    set -x
    rpAndPackages=($(rpAndPackages))
    for (( i=1; i<${#rpAndPackages[@]}; i++ ));
    do
      cd $(Pipeline.Workspace)/s/azure-sdk-for-go/sdk/resourcemanager/${rpAndPackages[0]}/${rpAndPackages[$i]}
      echo $GOPATH
      echo $GOROOT
      export AZURE_CLIENT_ID=$(SERVICE_PRINCIPE_ID)
      export AZURE_CLIENT_SECRET=$(SERVICE_PRINCIPE_SECRET)
      export SUBSCRIPTION_ID=$(SERVICE_PRINCIPE_SUBSCRIPTION)
      export AZURE_TENANT_ID=$(SERVICE_PRINCIPE_TENANT)

      go get gotest.tools/gotestsum
      ls -l $(Pipeline.Workspace)/s/go/bin

      go mod tidy
      $(Pipeline.Workspace)/s/go/bin/gotestsum --format testname -- -coverprofile cover.out 1>>$(Pipeline.Workspace)/s/$(TASK_KEY).log 2>&1
      if [ "$?" != "0" ]; then
        echo -e "\e[31m[$(date -u)] ERROR: [$(ResourceProvider)]: Go Mock Test failed"
        az login --service-principal -u $(SERVICE_PRINCIPE_ID) -p $(SERVICE_PRINCIPE_SECRET) --tenant $(SERVICE_PRINCIPE_TENANT)
        az storage blob upload -c depthcoverage -f $(Pipeline.Workspace)/s/$(TASK_KEY).log -n log/$(CodeGenerationName)-$(Build.BuildId)-$(TASK_KEY).log --subscription $(SERVICE_PRINCIPE_SUBSCRIPTION) --account-name=depthcoverage
        echo "##vso[task.setvariable variable=Task_Result]failure"
        exit 1
      fi
    done
  displayName: 'Mock Test'
