steps:
- template: ../PrepareSDKCodeEnv.yml
- bash: |
    echo "$README_FILE"
    pwd
    ls -l
    
    FILE=$(Pipeline.Workspace)/s/specification/$(ResourceProvider)/resource-manager/readme.go.md
    if [ -f "$FILE" ]; then
      echo "$FILE exists."
      cp "$FILE" $(Pipeline.Workspace)/s/azure-rest-api-specs/specification/$(ResourceProvider)/resource-manager/readme.go.md
    fi
    
    if [ "$?" != "0" ]; then
      echo "failed to generate readme config file"
      echo "##vso[task.setvariable variable=Task_Result]failure"
    else
      echo "readme config file generated"
      cd $(Pipeline.Workspace)/s/azure-rest-api-specs
      echo "https://$(PIPELINE_USER):$(PIPELINE_TOKEN)@github.com" > ~/.git-credentials
      git config credential.helper store ; git config --global user.email "chunyu@microsoft.com";git config --global user.name "chunyu3;"
      git branch; git pull origin $(WORKBRANCH); git add -A; git commit -m "autogenerated"; git push origin $(WORKBRANCH)
    fi
  displayName: 'Generate or update configuration file'
- bash: |
    set -x
    pwd
    ls -l
    # autorest --go --use="@microsoft.azure/autorest.go@2.1.175" --verbose --multiapi --use-onever --version=previous --go-sdk-folder=./go/src/github.com/terraform-providers/terraform-provider-azurerm/vendor/github.com/Azure/azure-sdk-for-go ./azure-rest-api-specs/$(README_FILE) 1>>$(TASK_KEY).log 2>&1
    tag=$(TAG)
    moduleName="sdk/$(ResourceProvider)/arm$(ResourceProvider)"
    module="github.com/Azure/azure-sdk-for-go/$moduleName"
    gosdkfolder="$(Pipeline.Workspace)/s/azure-sdk-for-go"
    outputfolder="$gosdkfolder/$moduleName"
    if [ "$tag" == "" ]; then
      autorest --use=@autorest/go@4.0.0-preview.22 --go --track2 --go-sdk-folder=$gosdkfolder --module=$module --output-folder=$outputfolder --azure-arm=true --file-prefix="zz_generated_" --clear-output-folder=false $(Pipeline.Workspace)/s/azure-rest-api-specs/specification/$(ResourceProvider)/resource-manager/readme.md 1>>$(TASK_KEY).log 2>&1
    else
      autorest --use=@autorest/go@4.0.0-preview.22 --go --track2 --tag=$(TAG) --go-sdk-folder=$gosdkfolder --module=$module --output-folder=$outputfolder --azure-arm=true --file-prefix="zz_generated_" --clear-output-folder=false $(Pipeline.Workspace)/s/azure-rest-api-specs/specification/$(ResourceProvider)/resource-manager/readme.md 1>>$(TASK_KEY).log 2>&1
    fi

    if [ "$?" != "0" ]; then
      echo -e "\e[31m[$(date -u)] ERROR: [$OPERATION : $(ResourceProvider)]: Generate go sdk failed"
      az login --service-principal -u $(SERVICE_PRINCIPE_ID) -p $(SERVICE_PRINCIPE_SECRET) --tenant $(SERVICE_PRINCIPE_TENANT)
      az storage blob upload -c depthcoverage -f $(TASK_KEY).log -n log/$(CodeGenerationName)-$(Build.BuildId)-$(TASK_KEY).log --subscription $(SERVICE_PRINCIPE_SUBSCRIPTION) --account-name=depthcoverage
      echo "##vso[task.setvariable variable=Task_Result]failure"
      exit 1
    fi
  displayName: "Generate Go-sdk"
- bash: |
    moduleName="sdk/$(ResourceProvider)/arm$(ResourceProvider)"
    module="github.com/Azure/azure-sdk-for-go/$moduleName"
    gosdkfolder="$(Pipeline.Workspace)/s/azure-sdk-for-go"
    outputfolder="$gosdkfolder/$moduleName"
    cd $(Pipeline.Workspace)/s
    autorest --version=3.2.1 --use=https://amecodegenstorage.blob.core.windows.net/tools/autorest-tests-0.0.1.tgz $(Pipeline.Workspace)/s/azure-rest-api-specs/specification/$(ResourceProvider)/resource-manager/readme.md --use=@autorest/go@4.0.0-preview.22 --file-prefix="zz_generated_" --track2 --go --output-folder=$outputfolder 1>>$(TASK_KEY).log 2>&1
  displayName: 'Generate Mock Test case'
- bash: |
    cd $(Pipeline.Workspace)/s/azure-sdk-for-go
    echo "https://$(PIPELINE_USER):$(PIPELINE_TOKEN)@github.com" > ~/.git-credentials
    git config credential.helper store ; git config --global user.email "chunyu@microsoft.com";git config --global user.name "chunyu3"
    git branch; git pull origin $(WORKBRANCH); git add -A; git commit -m "autogenerated"; git push origin $(WORKBRANCH);
  displayName: 'submit code'